/**
 * Generated by orval v7.9.0 🍺
 * Do not edit manually.
 * SED.API
 * Backend do sistema de Entrevista de Desligamento - SED
 * OpenAPI spec version: v1.0.0.0
 */
import * as axios from 'axios';
import type {
  AxiosRequestConfig,
  AxiosResponse
} from 'axios';

import type {
  AlteracaoSenha,
  AtualizaMotivo,
  ConfigFatorResposta,
  DadosAvaliacaoGeral,
  DadosCabecalho,
  DadosEntrevistasFuncionarios,
  DadosFatorOperacional,
  DeleteDetMotivoExcluirParams,
  DeleteFatorOperacionalExcluirParams,
  DeleteFatorRespostaExcluirParams,
  DeleteMotivoExcluirParams,
  DeletePerguntaAvaliacaoExcluirParams,
  DeleteRespostaExcluirParams,
  DeleteUsuarioExcluirParams,
  DetMotivo,
  DetalheSegmento,
  Entrevista,
  EntrevistaBuscaModel,
  EntrevistaDesligamento,
  FatorOperacional,
  Funcao,
  FuncionarioBusca,
  GetDetMotivoParams,
  GetEntrevistaAvaliacaoGeralParams,
  GetEntrevistaDadosDemissaoParams,
  GetEntrevistaDadosEntrevistaParams,
  GetEntrevistaDadosFuncionarioParams,
  GetEntrevistaDadosMotivosParams,
  GetEntrevistaFatoresOperacionaisParams,
  GetEntrevistaListaEncarregadosParams,
  GetEntrevistaListaEntrevistasParams,
  GetEntrevistaListaFuncionarioBuscaParams,
  GetFatorOperacionalParams,
  GetMotivoParams,
  GetPerguntaAvaliacaoParams,
  GetRelatorioDadosAvaliacaGeralParams,
  GetRelatorioDadosCabecalhoParams,
  GetRelatorioDadosFatOperacionalParams,
  GetRelatorioMotivoParams,
  GetRelatorioRemuneracaoParams,
  GetRelatorioSegmentoParams,
  GetRepostaFatorOperacionalUsaComentarioParams,
  GetRespostaParams,
  GetUsuarioAdmParams,
  Login,
  Motivo,
  PerguntaAvaliacao,
  PerguntaOutraProp,
  Resposta,
  Retorno,
  Usuario,
  UsuarioRetorno
} from '../models';

export const getSedApi = () => {
const postAutenticacaoLogin = <TData = AxiosResponse<UsuarioRetorno>>(
    login: Login, options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.default.post(
      `http://localhost:38992/Autenticacao/login`,
      login,options
    );
  }

const getDetMotivo = <TData = AxiosResponse<DetMotivo[]>>(
    params?: GetDetMotivoParams, options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.default.get(
      `http://localhost:38992/DetMotivo`,{
    ...options,
        params: {...params, ...options?.params},}
    );
  }

const postDetMotivoGravar = <TData = AxiosResponse<DetMotivo>>(
    detMotivo: DetMotivo, options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.default.post(
      `http://localhost:38992/DetMotivo/gravar`,
      detMotivo,options
    );
  }

const putDetMotivoAtualizar = <TData = AxiosResponse<DetMotivo>>(
    detMotivo: DetMotivo, options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.default.put(
      `http://localhost:38992/DetMotivo/atualizar`,
      detMotivo,options
    );
  }

const deleteDetMotivoExcluir = <TData = AxiosResponse<Retorno>>(
    params?: DeleteDetMotivoExcluirParams, options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.default.delete(
      `http://localhost:38992/DetMotivo/excluir`,{
    ...options,
        params: {...params, ...options?.params},}
    );
  }

const getEntrevistaMotivosDesligamento = <TData = AxiosResponse<Motivo[]>>(
     options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.default.get(
      `http://localhost:38992/Entrevista/motivos/desligamento`,options
    );
  }

const getEntrevistaDetalheMotdesligamento = <TData = AxiosResponse<DetMotivo[]>>(
     options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.default.get(
      `http://localhost:38992/Entrevista/detalhe/motdesligamento`,options
    );
  }

const getEntrevistaDadosFuncionario = <TData = AxiosResponse<Entrevista[]>>(
    params?: GetEntrevistaDadosFuncionarioParams, options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.default.get(
      `http://localhost:38992/Entrevista/dados/funcionario`,{
    ...options,
        params: {...params, ...options?.params},}
    );
  }

const getEntrevistaDadosDemissao = <TData = AxiosResponse<void>>(
    params?: GetEntrevistaDadosDemissaoParams, options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.default.get(
      `http://localhost:38992/Entrevista/dados/demissao`,{
    ...options,
        params: {...params, ...options?.params},}
    );
  }

const getEntrevistaDadosEntrevista = <TData = AxiosResponse<Entrevista[]>>(
    params?: GetEntrevistaDadosEntrevistaParams, options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.default.get(
      `http://localhost:38992/Entrevista/dados/entrevista`,{
    ...options,
        params: {...params, ...options?.params},}
    );
  }

const getEntrevistaDadosMotivos = <TData = AxiosResponse<EntrevistaBuscaModel[]>>(
    params?: GetEntrevistaDadosMotivosParams, options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.default.get(
      `http://localhost:38992/Entrevista/dados/motivos`,{
    ...options,
        params: {...params, ...options?.params},}
    );
  }

const getEntrevistaListaEncarregados = <TData = AxiosResponse<EntrevistaBuscaModel[]>>(
    params?: GetEntrevistaListaEncarregadosParams, options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.default.get(
      `http://localhost:38992/Entrevista/lista/encarregados`,{
    ...options,
        params: {...params, ...options?.params},}
    );
  }

const getEntrevistaDetSegmento = <TData = AxiosResponse<DetalheSegmento[]>>(
     options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.default.get(
      `http://localhost:38992/Entrevista/detSegmento`,options
    );
  }

const getEntrevistaFatoresOperacionais = <TData = AxiosResponse<FatorOperacional[]>>(
    params?: GetEntrevistaFatoresOperacionaisParams, options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.default.get(
      `http://localhost:38992/Entrevista/fatoresOperacionais`,{
    ...options,
        params: {...params, ...options?.params},}
    );
  }

const getEntrevistaEncarregadoEntrevista = <TData = AxiosResponse<FatorOperacional[]>>(
     options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.default.get(
      `http://localhost:38992/Entrevista/encarregado/entrevista`,options
    );
  }

const getEntrevistaCentrocustoEntrevista = <TData = AxiosResponse<FatorOperacional[]>>(
     options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.default.get(
      `http://localhost:38992/Entrevista/centrocusto/entrevista`,options
    );
  }

const getEntrevistaFuncoesEntrevista = <TData = AxiosResponse<Funcao[]>>(
     options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.default.get(
      `http://localhost:38992/Entrevista/funcoes/entrevista`,options
    );
  }

const getEntrevistaFiliaisEntrevista = <TData = AxiosResponse<FatorOperacional[]>>(
     options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.default.get(
      `http://localhost:38992/Entrevista/filiais/entrevista`,options
    );
  }

const getEntrevistaAvaliacaoGeral = <TData = AxiosResponse<PerguntaAvaliacao[]>>(
    params?: GetEntrevistaAvaliacaoGeralParams, options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.default.get(
      `http://localhost:38992/Entrevista/avaliacaoGeral`,{
    ...options,
        params: {...params, ...options?.params},}
    );
  }

const getEntrevistaFatOperacionaisBusca = <TData = AxiosResponse<FatorOperacional[]>>(
     options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.default.get(
      `http://localhost:38992/Entrevista/fatOperacionais/busca`,options
    );
  }

const getEntrevistaAvaliacaoGeralBusca = <TData = AxiosResponse<PerguntaAvaliacao[]>>(
     options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.default.get(
      `http://localhost:38992/Entrevista/avaliacaoGeral/busca`,options
    );
  }

const getEntrevistaListaFuncionarioBusca = <TData = AxiosResponse<FuncionarioBusca[]>>(
    params?: GetEntrevistaListaFuncionarioBuscaParams, options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.default.get(
      `http://localhost:38992/Entrevista/listaFuncionario/busca`,{
    ...options,
        params: {...params, ...options?.params},}
    );
  }

const getEntrevistaListaEntrevistas = <TData = AxiosResponse<DadosEntrevistasFuncionarios[]>>(
    params?: GetEntrevistaListaEntrevistasParams, options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.default.get(
      `http://localhost:38992/Entrevista/listaEntrevistas`,{
    ...options,
        params: {...params, ...options?.params},}
    );
  }

const getEntrevistaAlteraMotivoDesligamento = <TData = AxiosResponse<Motivo[]>>(
     options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.default.get(
      `http://localhost:38992/Entrevista/alteraMotivoDesligamento`,options
    );
  }

const postEntrevistaGravar = <TData = AxiosResponse<EntrevistaDesligamento>>(
    entrevistaDesligamento: EntrevistaDesligamento, options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.default.post(
      `http://localhost:38992/Entrevista/gravar`,
      entrevistaDesligamento,options
    );
  }

const putEntrevistaAtualizaMotivo = <TData = AxiosResponse<EntrevistaDesligamento>>(
    atualizaMotivo: AtualizaMotivo, options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.default.put(
      `http://localhost:38992/Entrevista/atualiza/motivo`,
      atualizaMotivo,options
    );
  }

const getFatorOperacional = <TData = AxiosResponse<FatorOperacional[]>>(
    params?: GetFatorOperacionalParams, options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.default.get(
      `http://localhost:38992/FatorOperacional`,{
    ...options,
        params: {...params, ...options?.params},}
    );
  }

const getFatorOperacionalMotivos = <TData = AxiosResponse<Motivo[]>>(
     options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.default.get(
      `http://localhost:38992/FatorOperacional/motivos`,options
    );
  }

const postFatorOperacionalGravar = <TData = AxiosResponse<Retorno>>(
    fatorOperacional: FatorOperacional, options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.default.post(
      `http://localhost:38992/FatorOperacional/gravar`,
      fatorOperacional,options
    );
  }

const putFatorOperacionalAtualizar = <TData = AxiosResponse<Retorno>>(
    fatorOperacional: FatorOperacional, options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.default.put(
      `http://localhost:38992/FatorOperacional/atualizar`,
      fatorOperacional,options
    );
  }

const deleteFatorOperacionalExcluir = <TData = AxiosResponse<Retorno>>(
    params?: DeleteFatorOperacionalExcluirParams, options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.default.delete(
      `http://localhost:38992/FatorOperacional/excluir`,{
    ...options,
        params: {...params, ...options?.params},}
    );
  }

const getFatorResposta = <TData = AxiosResponse<ConfigFatorResposta[]>>(
     options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.default.get(
      `http://localhost:38992/FatorResposta`,options
    );
  }

const getFatorRespostaRespostas = <TData = AxiosResponse<Resposta[]>>(
     options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.default.get(
      `http://localhost:38992/FatorResposta/respostas`,options
    );
  }

const getFatorRespostaFatores = <TData = AxiosResponse<ConfigFatorResposta[]>>(
     options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.default.get(
      `http://localhost:38992/FatorResposta/fatores`,options
    );
  }

const postFatorRespostaGravar = <TData = AxiosResponse<ConfigFatorResposta>>(
    configFatorResposta: ConfigFatorResposta, options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.default.post(
      `http://localhost:38992/FatorResposta/gravar`,
      configFatorResposta,options
    );
  }

const deleteFatorRespostaExcluir = <TData = AxiosResponse<Retorno>>(
    params?: DeleteFatorRespostaExcluirParams, options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.default.delete(
      `http://localhost:38992/FatorResposta/excluir`,{
    ...options,
        params: {...params, ...options?.params},}
    );
  }

const getMotivo = <TData = AxiosResponse<Motivo[]>>(
    params?: GetMotivoParams, options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.default.get(
      `http://localhost:38992/Motivo`,{
    ...options,
        params: {...params, ...options?.params},}
    );
  }

const postMotivoGravar = <TData = AxiosResponse<FatorOperacional>>(
    motivo: Motivo, options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.default.post(
      `http://localhost:38992/Motivo/gravar`,
      motivo,options
    );
  }

const putMotivoAtualizar = <TData = AxiosResponse<DetMotivo>>(
    motivo: Motivo, options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.default.put(
      `http://localhost:38992/Motivo/atualizar`,
      motivo,options
    );
  }

const deleteMotivoExcluir = <TData = AxiosResponse<Retorno>>(
    params?: DeleteMotivoExcluirParams, options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.default.delete(
      `http://localhost:38992/Motivo/excluir`,{
    ...options,
        params: {...params, ...options?.params},}
    );
  }

const getPerguntaAvaliacao = <TData = AxiosResponse<PerguntaAvaliacao[]>>(
    params?: GetPerguntaAvaliacaoParams, options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.default.get(
      `http://localhost:38992/PerguntaAvaliacao`,{
    ...options,
        params: {...params, ...options?.params},}
    );
  }

const getPerguntaAvaliacaoMotivos = <TData = AxiosResponse<Motivo[]>>(
     options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.default.get(
      `http://localhost:38992/PerguntaAvaliacao/motivos`,options
    );
  }

const postPerguntaAvaliacaoGravar = <TData = AxiosResponse<Retorno>>(
    perguntaAvaliacao: PerguntaAvaliacao, options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.default.post(
      `http://localhost:38992/PerguntaAvaliacao/gravar`,
      perguntaAvaliacao,options
    );
  }

const putPerguntaAvaliacaoAtualizar = <TData = AxiosResponse<Retorno>>(
    perguntaAvaliacao: PerguntaAvaliacao, options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.default.put(
      `http://localhost:38992/PerguntaAvaliacao/atualizar`,
      perguntaAvaliacao,options
    );
  }

const deletePerguntaAvaliacaoExcluir = <TData = AxiosResponse<Retorno>>(
    params?: DeletePerguntaAvaliacaoExcluirParams, options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.default.delete(
      `http://localhost:38992/PerguntaAvaliacao/excluir`,{
    ...options,
        params: {...params, ...options?.params},}
    );
  }

const getPerguntaOutraProposta = <TData = AxiosResponse<PerguntaOutraProp[]>>(
     options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.default.get(
      `http://localhost:38992/PerguntaOutraProposta`,options
    );
  }

const postPerguntaOutraPropostaGravar = <TData = AxiosResponse<PerguntaOutraProp>>(
    perguntaOutraProp: PerguntaOutraProp, options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.default.post(
      `http://localhost:38992/PerguntaOutraProposta/gravar`,
      perguntaOutraProp,options
    );
  }

const putPerguntaOutraPropostaAtualizar = <TData = AxiosResponse<PerguntaOutraProp>>(
    perguntaOutraProp: PerguntaOutraProp, options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.default.put(
      `http://localhost:38992/PerguntaOutraProposta/atualizar`,
      perguntaOutraProp,options
    );
  }

const deletePerguntaOutraPropostaExcluir = <TData = AxiosResponse<Retorno>>(
     options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.default.delete(
      `http://localhost:38992/PerguntaOutraProposta/excluir`,options
    );
  }

const getRelatorioDadosCabecalho = <TData = AxiosResponse<DadosCabecalho[]>>(
    params?: GetRelatorioDadosCabecalhoParams, options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.default.get(
      `http://localhost:38992/Relatorio/dadosCabecalho`,{
    ...options,
        params: {...params, ...options?.params},}
    );
  }

const getRelatorioDadosFatOperacional = <TData = AxiosResponse<DadosFatorOperacional[]>>(
    params?: GetRelatorioDadosFatOperacionalParams, options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.default.get(
      `http://localhost:38992/Relatorio/dadosFatOperacional`,{
    ...options,
        params: {...params, ...options?.params},}
    );
  }

const getRelatorioDadosAvaliacaGeral = <TData = AxiosResponse<DadosAvaliacaoGeral[]>>(
    params?: GetRelatorioDadosAvaliacaGeralParams, options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.default.get(
      `http://localhost:38992/Relatorio/dadosAvaliacaGeral`,{
    ...options,
        params: {...params, ...options?.params},}
    );
  }

const getRelatorioSegmento = <TData = AxiosResponse<string[]>>(
    params?: GetRelatorioSegmentoParams, options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.default.get(
      `http://localhost:38992/Relatorio/segmento`,{
    ...options,
        params: {...params, ...options?.params},}
    );
  }

const getRelatorioMotivo = <TData = AxiosResponse<string[]>>(
    params?: GetRelatorioMotivoParams, options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.default.get(
      `http://localhost:38992/Relatorio/motivo`,{
    ...options,
        params: {...params, ...options?.params},}
    );
  }

const getRelatorioRemuneracao = <TData = AxiosResponse<string[]>>(
    params?: GetRelatorioRemuneracaoParams, options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.default.get(
      `http://localhost:38992/Relatorio/remuneracao`,{
    ...options,
        params: {...params, ...options?.params},}
    );
  }

const getRepostaFatorOperacional = <TData = AxiosResponse<Resposta[]>>(
     options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.default.get(
      `http://localhost:38992/RepostaFatorOperacional`,options
    );
  }

const getRepostaFatorOperacionalUsaComentario = <TData = AxiosResponse<void>>(
    params?: GetRepostaFatorOperacionalUsaComentarioParams, options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.default.get(
      `http://localhost:38992/RepostaFatorOperacional/UsaComentario`,{
    ...options,
        params: {...params, ...options?.params},}
    );
  }

const getResposta = <TData = AxiosResponse<Resposta[]>>(
    params?: GetRespostaParams, options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.default.get(
      `http://localhost:38992/Resposta`,{
    ...options,
        params: {...params, ...options?.params},}
    );
  }

const postRespostaGravar = <TData = AxiosResponse<Retorno>>(
    resposta: Resposta, options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.default.post(
      `http://localhost:38992/Resposta/gravar`,
      resposta,options
    );
  }

const putRespostaAlterar = <TData = AxiosResponse<Retorno>>(
    resposta: Resposta, options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.default.put(
      `http://localhost:38992/Resposta/alterar`,
      resposta,options
    );
  }

const deleteRespostaExcluir = <TData = AxiosResponse<Retorno>>(
    params?: DeleteRespostaExcluirParams, options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.default.delete(
      `http://localhost:38992/Resposta/excluir`,{
    ...options,
        params: {...params, ...options?.params},}
    );
  }

const getUsuario = <TData = AxiosResponse<UsuarioRetorno[]>>(
     options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.default.get(
      `http://localhost:38992/Usuario`,options
    );
  }

const postUsuarioGravar = <TData = AxiosResponse<Usuario>>(
    usuario: Usuario, options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.default.post(
      `http://localhost:38992/Usuario/gravar`,
      usuario,options
    );
  }

const putUsuarioAtualizar = <TData = AxiosResponse<Usuario>>(
    usuario: Usuario, options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.default.put(
      `http://localhost:38992/Usuario/atualizar`,
      usuario,options
    );
  }

const deleteUsuarioExcluir = <TData = AxiosResponse<Retorno>>(
    params?: DeleteUsuarioExcluirParams, options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.default.delete(
      `http://localhost:38992/Usuario/excluir`,{
    ...options,
        params: {...params, ...options?.params},}
    );
  }

const putUsuarioAlteracaoSenha = <TData = AxiosResponse<Retorno>>(
    alteracaoSenha: AlteracaoSenha, options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.default.put(
      `http://localhost:38992/Usuario/alteracao/senha`,
      alteracaoSenha,options
    );
  }

const getUsuarioAdm = <TData = AxiosResponse<void>>(
    params?: GetUsuarioAdmParams, options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.default.get(
      `http://localhost:38992/Usuario/adm`,{
    ...options,
        params: {...params, ...options?.params},}
    );
  }

return {postAutenticacaoLogin,getDetMotivo,postDetMotivoGravar,putDetMotivoAtualizar,deleteDetMotivoExcluir,getEntrevistaMotivosDesligamento,getEntrevistaDetalheMotdesligamento,getEntrevistaDadosFuncionario,getEntrevistaDadosDemissao,getEntrevistaDadosEntrevista,getEntrevistaDadosMotivos,getEntrevistaListaEncarregados,getEntrevistaDetSegmento,getEntrevistaFatoresOperacionais,getEntrevistaEncarregadoEntrevista,getEntrevistaCentrocustoEntrevista,getEntrevistaFuncoesEntrevista,getEntrevistaFiliaisEntrevista,getEntrevistaAvaliacaoGeral,getEntrevistaFatOperacionaisBusca,getEntrevistaAvaliacaoGeralBusca,getEntrevistaListaFuncionarioBusca,getEntrevistaListaEntrevistas,getEntrevistaAlteraMotivoDesligamento,postEntrevistaGravar,putEntrevistaAtualizaMotivo,getFatorOperacional,getFatorOperacionalMotivos,postFatorOperacionalGravar,putFatorOperacionalAtualizar,deleteFatorOperacionalExcluir,getFatorResposta,getFatorRespostaRespostas,getFatorRespostaFatores,postFatorRespostaGravar,deleteFatorRespostaExcluir,getMotivo,postMotivoGravar,putMotivoAtualizar,deleteMotivoExcluir,getPerguntaAvaliacao,getPerguntaAvaliacaoMotivos,postPerguntaAvaliacaoGravar,putPerguntaAvaliacaoAtualizar,deletePerguntaAvaliacaoExcluir,getPerguntaOutraProposta,postPerguntaOutraPropostaGravar,putPerguntaOutraPropostaAtualizar,deletePerguntaOutraPropostaExcluir,getRelatorioDadosCabecalho,getRelatorioDadosFatOperacional,getRelatorioDadosAvaliacaGeral,getRelatorioSegmento,getRelatorioMotivo,getRelatorioRemuneracao,getRepostaFatorOperacional,getRepostaFatorOperacionalUsaComentario,getResposta,postRespostaGravar,putRespostaAlterar,deleteRespostaExcluir,getUsuario,postUsuarioGravar,putUsuarioAtualizar,deleteUsuarioExcluir,putUsuarioAlteracaoSenha,getUsuarioAdm}};
export type PostAutenticacaoLoginResult = AxiosResponse<UsuarioRetorno>
export type GetDetMotivoResult = AxiosResponse<DetMotivo[]>
export type PostDetMotivoGravarResult = AxiosResponse<DetMotivo>
export type PutDetMotivoAtualizarResult = AxiosResponse<DetMotivo>
export type DeleteDetMotivoExcluirResult = AxiosResponse<Retorno>
export type GetEntrevistaMotivosDesligamentoResult = AxiosResponse<Motivo[]>
export type GetEntrevistaDetalheMotdesligamentoResult = AxiosResponse<DetMotivo[]>
export type GetEntrevistaDadosFuncionarioResult = AxiosResponse<Entrevista[]>
export type GetEntrevistaDadosDemissaoResult = AxiosResponse<void>
export type GetEntrevistaDadosEntrevistaResult = AxiosResponse<Entrevista[]>
export type GetEntrevistaDadosMotivosResult = AxiosResponse<EntrevistaBuscaModel[]>
export type GetEntrevistaListaEncarregadosResult = AxiosResponse<EntrevistaBuscaModel[]>
export type GetEntrevistaDetSegmentoResult = AxiosResponse<DetalheSegmento[]>
export type GetEntrevistaFatoresOperacionaisResult = AxiosResponse<FatorOperacional[]>
export type GetEntrevistaEncarregadoEntrevistaResult = AxiosResponse<FatorOperacional[]>
export type GetEntrevistaCentrocustoEntrevistaResult = AxiosResponse<FatorOperacional[]>
export type GetEntrevistaFuncoesEntrevistaResult = AxiosResponse<Funcao[]>
export type GetEntrevistaFiliaisEntrevistaResult = AxiosResponse<FatorOperacional[]>
export type GetEntrevistaAvaliacaoGeralResult = AxiosResponse<PerguntaAvaliacao[]>
export type GetEntrevistaFatOperacionaisBuscaResult = AxiosResponse<FatorOperacional[]>
export type GetEntrevistaAvaliacaoGeralBuscaResult = AxiosResponse<PerguntaAvaliacao[]>
export type GetEntrevistaListaFuncionarioBuscaResult = AxiosResponse<FuncionarioBusca[]>
export type GetEntrevistaListaEntrevistasResult = AxiosResponse<DadosEntrevistasFuncionarios[]>
export type GetEntrevistaAlteraMotivoDesligamentoResult = AxiosResponse<Motivo[]>
export type PostEntrevistaGravarResult = AxiosResponse<EntrevistaDesligamento>
export type PutEntrevistaAtualizaMotivoResult = AxiosResponse<EntrevistaDesligamento>
export type GetFatorOperacionalResult = AxiosResponse<FatorOperacional[]>
export type GetFatorOperacionalMotivosResult = AxiosResponse<Motivo[]>
export type PostFatorOperacionalGravarResult = AxiosResponse<FatorOperacional>
export type PutFatorOperacionalAtualizarResult = AxiosResponse<FatorOperacional>
export type DeleteFatorOperacionalExcluirResult = AxiosResponse<Retorno>
export type GetFatorRespostaResult = AxiosResponse<ConfigFatorResposta[]>
export type GetFatorRespostaRespostasResult = AxiosResponse<Resposta[]>
export type GetFatorRespostaFatoresResult = AxiosResponse<ConfigFatorResposta[]>
export type PostFatorRespostaGravarResult = AxiosResponse<ConfigFatorResposta>
export type DeleteFatorRespostaExcluirResult = AxiosResponse<Retorno>
export type GetMotivoResult = AxiosResponse<Motivo[]>
export type PostMotivoGravarResult = AxiosResponse<FatorOperacional>
export type PutMotivoAtualizarResult = AxiosResponse<DetMotivo>
export type DeleteMotivoExcluirResult = AxiosResponse<Retorno>
export type GetPerguntaAvaliacaoResult = AxiosResponse<PerguntaAvaliacao[]>
export type GetPerguntaAvaliacaoMotivosResult = AxiosResponse<Motivo[]>
export type PostPerguntaAvaliacaoGravarResult = AxiosResponse<PerguntaAvaliacao>
export type PutPerguntaAvaliacaoAtualizarResult = AxiosResponse<PerguntaAvaliacao>
export type DeletePerguntaAvaliacaoExcluirResult = AxiosResponse<Retorno>
export type GetPerguntaOutraPropostaResult = AxiosResponse<PerguntaOutraProp[]>
export type PostPerguntaOutraPropostaGravarResult = AxiosResponse<PerguntaOutraProp>
export type PutPerguntaOutraPropostaAtualizarResult = AxiosResponse<PerguntaOutraProp>
export type DeletePerguntaOutraPropostaExcluirResult = AxiosResponse<Retorno>
export type GetRelatorioDadosCabecalhoResult = AxiosResponse<DadosCabecalho[]>
export type GetRelatorioDadosFatOperacionalResult = AxiosResponse<DadosFatorOperacional[]>
export type GetRelatorioDadosAvaliacaGeralResult = AxiosResponse<DadosAvaliacaoGeral[]>
export type GetRelatorioSegmentoResult = AxiosResponse<string[]>
export type GetRelatorioMotivoResult = AxiosResponse<string[]>
export type GetRelatorioRemuneracaoResult = AxiosResponse<string[]>
export type GetRepostaFatorOperacionalResult = AxiosResponse<Resposta[]>
export type GetRepostaFatorOperacionalUsaComentarioResult = AxiosResponse<void>
export type GetRespostaResult = AxiosResponse<Resposta[]>
export type PostRespostaGravarResult = AxiosResponse<Retorno>
export type PutRespostaAlterarResult = AxiosResponse<Retorno>
export type DeleteRespostaExcluirResult = AxiosResponse<Retorno>
export type GetUsuarioResult = AxiosResponse<UsuarioRetorno[]>
export type PostUsuarioGravarResult = AxiosResponse<Usuario>
export type PutUsuarioAtualizarResult = AxiosResponse<Usuario>
export type DeleteUsuarioExcluirResult = AxiosResponse<Retorno>
export type PutUsuarioAlteracaoSenhaResult = AxiosResponse<Retorno>
export type GetUsuarioAdmResult = AxiosResponse<void>
